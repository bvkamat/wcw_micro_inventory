var Solr = require('solr-client');

function SolrObj(config) {
    console.log(config.options.host);
    this.client = Solr.createClient(config.options);
}

SolrObj.prototype.findAll = function(queryString, start, noOfrows, facetOptions, cb) {
    var query = this.client.createQuery().q(queryString).start(start).rows(noOfrows).facet(facetOptions);
    this.client.search(query, function(err, result) {
        if (err) {
            console.log("error" + err);
        } else {
            cb(null, result);
        }
    });
};


SolrObj.prototype.findBySuggestion = function(queryString, start, noOfrows, suggestions, cb) {
    var query = this.client.createQuery().q(queryString).start(start).rows(noOfrows).mlt(suggestions);
    console.log(query);
    this.client.search(query, function(err, result) {
        if (err) {
            console.log("error" + err);
        } else {
            cb(null, result);
        }
    });
};

SolrObj.prototype.suggestStrings = function(queryString, cb){

	var condition = 'q='+queryString;console.log("1 "+condition);
		this.client.get('suggest', condition, function(err,result){
				if(err) {  
				 console.log("error in SolrObj"+ err);
			    } else {
                    //console.log("Success "+result);
			    	cb(null,result);
			     //console.log(JSON.stringify(result));
			}});		
};

module.exports = SolrObj;